version: "3.5"

services:
  db:
    container_name: db
    build:
      context: "./"
      dockerfile: "Dockerfile_postgres-fi"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgrespassword}
      POSTGRES_HOST_AUTH_METHOD: "trust"
      PGDATA: /data/postgres
    volumes:
      - postgres_volume:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - internal_network
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    volumes:
      - pgadmin_volume:/root/.pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - internal_network
    restart: unless-stopped

  tooli:
    build:
      context: "./"
      dockerfile: "Dockerfile_tooli"
    container_name: tooli
    volumes:
      - ./tooli:/app
      - "/app/node_modules"
    environment:
      DATABASE_URL: postgres://postgres:postgrespassword@db:5432
    depends_on:
      - db
    tty: true
    command: rails s -b 0.0.0.0
    ports:
      - "3000:3000"
    networks:
      - internal_network

networks:
  internal_network:
    driver: bridge

volumes:
  postgres_volume:
  pgadmin_volume:
# docker-compose build
# docker-compose up -d
# docker-compose exec tooli rake db:create db:migrate
# docker-compose exec tooli rspec
# localhost:3000

# test:
#   <<: *default
#   database: tooli_test
#   host: localhost
#   username: postgres
#   password: postgrespassword
